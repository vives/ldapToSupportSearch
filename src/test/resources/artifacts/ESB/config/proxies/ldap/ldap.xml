<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse" name="ldap" transports="https http"
       startOnLoad="true"
       trace="disable">
    <description/>
    <target>
        <inSequence>
            <property name="application" expression="json-eval($.application)"/>
            <switch source="get-property('application')">
                <case regex="ldap">
                    <property name="operation" expression="json-eval($.operation)"/>
                    <switch source="get-property('operation')">
                        <case regex="createEntity">
                            <property name="NO_ENTITY_BODY" scope="axis2" action="remove"/>
                            <property name="messageType" value="application/json" scope="axis2"/>
                            <property name="objectClass"
                                      expression="json-eval($.content.objectClass)"/>
                            <property name="dn" expression="json-eval($.content.dn)"/>
                            <property name="attributes"
                                      expression="json-eval($.content.attributes)"/>
                            <property name="providerUrl" expression="json-eval($.providerUrl)"/>
                            <property name="securityPrincipal"
                                      expression="json-eval($.securityPrincipal)"/>
                            <property name="securityCredentials"
                                      expression="json-eval($.securityCredentials)"/>
                            <property name="secureConnection"
                                      expression="json-eval($.secureConnection)"/>
                            <property name="disableSSLCertificateChecking"
                                      expression="json-eval($.disableSSLCertificateChecking)"/>
                            <log level="full"/>
                            <ldap.init>
                                <providerUrl>{get-property('providerUrl')}</providerUrl>
                                <securityPrincipal>{get-property('securityPrincipal')}</securityPrincipal>
                                <securityCredentials>{get-property('securityCredentials')}</securityCredentials>
                                <secureConnection>{get-property('secureConnection')}</secureConnection>
                                <disableSSLCertificateChecking>{get-property('disableSSLCertificateChecking')}</disableSSLCertificateChecking>
                            </ldap.init>
                            <ldap.addEntry>
                                <objectClass>{get-property('objectClass')}</objectClass>
                                <dn>{get-property('dn')}</dn>
                                <attributes>{get-property('attributes')}</attributes>
                            </ldap.addEntry>
                            <respond/>
                        </case>
                        <case regex="deleteEntity">
                            <property name="NO_ENTITY_BODY" scope="axis2" action="remove"/>
                            <property name="messageType" value="application/json" scope="axis2"/>
                            <property name="dn" expression="json-eval($.content.dn)"/>
                            <property name="providerUrl" expression="json-eval($.providerUrl)"/>
                            <property name="securityPrincipal"
                                      expression="json-eval($.securityPrincipal)"/>
                            <property name="securityCredentials"
                                      expression="json-eval($.securityCredentials)"/>
                            <property name="secureConnection"
                                      expression="json-eval($.secureConnection)"/>
                            <property name="disableSSLCertificateChecking"
                                      expression="json-eval($.disableSSLCertificateChecking)"/>
                            <log level="full"/>
                            <ldap.init>
                                <providerUrl>{get-property('providerUrl')}</providerUrl>
                                <securityPrincipal>{get-property('securityPrincipal')}</securityPrincipal>
                                <securityCredentials>{get-property('securityCredentials')}</securityCredentials>
                                <secureConnection>{get-property('secureConnection')}</secureConnection>
                                <disableSSLCertificateChecking>{get-property('disableSSLCertificateChecking')}</disableSSLCertificateChecking>
                            </ldap.init>
                            <ldap.deleteEntry>
                                <dn>{get-property('dn')}</dn>
                            </ldap.deleteEntry>
                            <respond/>
                        </case>
                        <case regex="searchEntity">
                            <property name="NO_ENTITY_BODY" scope="axis2" action="remove"/>
                            <property name="messageType" value="application/json" scope="axis2"/>
                            <property name="objectClass"
                                      expression="json-eval($.content.objectClass)"/>
                            <property name="dn" expression="json-eval($.content.dn)"/>
                            <property name="attributes"
                                      expression="json-eval($.content.attributes)"/>
                            <property name="filters" expression="json-eval($.content.filters)"/>
                            <property name="providerUrl" expression="json-eval($.providerUrl)"/>
                            <property name="onlyOneReference" expression="json-eval($.onlyOneReference)"/>
                            <property name="securityPrincipal"
                                      expression="json-eval($.securityPrincipal)"/>
                            <property name="securityCredentials"
                                      expression="json-eval($.securityCredentials)"/>
                            <property name="secureConnection"
                                      expression="json-eval($.secureConnection)"/>
                            <property name="disableSSLCertificateChecking"
                                      expression="json-eval($.disableSSLCertificateChecking)"/>
                            <log level="full"/>
                            <ldap.init>
                                <providerUrl>{get-property('providerUrl')}</providerUrl>
                                <securityPrincipal>{get-property('securityPrincipal')}</securityPrincipal>
                                <securityCredentials>{get-property('securityCredentials')}</securityCredentials>
                                <secureConnection>{get-property('secureConnection')}</secureConnection>
                                <disableSSLCertificateChecking>{get-property('disableSSLCertificateChecking')}</disableSSLCertificateChecking>
                            </ldap.init>
                            <ldap.searchEntry>
                                <objectClass>{get-property('objectClass')}</objectClass>
                                <dn>{get-property('dn')}</dn>
                                <attributes>{get-property('attributes')}</attributes>
                                <filters>{get-property('filters')}</filters>
                                <onlyOneReference>{get-property('onlyOneReference')}</onlyOneReference>
                            </ldap.searchEntry>
                            <respond/>
                        </case>
                        <case regex="updateEntity">
                            <property name="NO_ENTITY_BODY" scope="axis2" action="remove"/>
                            <property name="messageType" value="application/json" scope="axis2"/>
                            <property name="mode" expression="json-eval($.content.mode)"/>
                            <property name="dn" expression="json-eval($.content.dn)"/>
                            <property name="attributes"
                                      expression="json-eval($.content.attributes)"/>
                            <property name="providerUrl" expression="json-eval($.providerUrl)"/>
                            <property name="securityPrincipal"
                                      expression="json-eval($.securityPrincipal)"/>
                            <property name="securityCredentials"
                                      expression="json-eval($.securityCredentials)"/>
                            <property name="secureConnection"
                                      expression="json-eval($.secureConnection)"/>
                            <property name="disableSSLCertificateChecking"
                                      expression="json-eval($.disableSSLCertificateChecking)"/>
                            <log level="full"/>
                            <ldap.init>
                                <providerUrl>{get-property('providerUrl')}</providerUrl>
                                <securityPrincipal>{get-property('securityPrincipal')}</securityPrincipal>
                                <securityCredentials>{get-property('securityCredentials')}</securityCredentials>
                                <secureConnection>{get-property('secureConnection')}</secureConnection>
                                <disableSSLCertificateChecking>{get-property('disableSSLCertificateChecking')}</disableSSLCertificateChecking>
                            </ldap.init>
                            <ldap.updateEntry>
                                <mode>{get-property('mode')}</mode>
                                <dn>{get-property('dn')}</dn>
                                <attributes>{get-property('attributes')}</attributes>
                            </ldap.updateEntry>
                            <respond/>
                        </case>
                        <case regex="authenticate">
                            <property name="NO_ENTITY_BODY" scope="axis2" action="remove"/>
                            <property name="messageType" value="application/json" scope="axis2"/>
                            <property name="dn" expression="json-eval($.content.dn)"/>
                            <property name="password" expression="json-eval($.content.password)"/>
                            <property name="providerUrl" expression="json-eval($.providerUrl)"/>
                            <property name="securityPrincipal"
                                      expression="json-eval($.securityPrincipal)"/>
                            <property name="securityCredentials"
                                      expression="json-eval($.securityCredentials)"/>
                            <property name="secureConnection"
                                      expression="json-eval($.secureConnection)"/>
                            <property name="disableSSLCertificateChecking"
                                      expression="json-eval($.disableSSLCertificateChecking)"/>
                            <log level="full"/>
                            <ldap.init>
                                <providerUrl>{get-property('providerUrl')}</providerUrl>
                                <securityPrincipal>{get-property('securityPrincipal')}</securityPrincipal>
                                <securityCredentials>{get-property('securityCredentials')}</securityCredentials>
                                <secureConnection>{get-property('secureConnection')}</secureConnection>
                                <disableSSLCertificateChecking>{get-property('disableSSLCertificateChecking')}</disableSSLCertificateChecking>
                            </ldap.init>
                            <ldap.authenticate>
                                <dn>{get-property('dn')}</dn>
                                <password>{get-property('password')}</password>
                            </ldap.authenticate>
                            <respond/>
                        </case>
                    </switch>
                </case>
            </switch>
        </inSequence>
        <faultSequence>
            <respond/>
        </faultSequence>
    </target>
</proxy>